{
	"compiler": {
		"version": "0.5.3+commit.10d17f24"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "testMe",
						"type": "uint256"
					}
				],
				"name": "testing",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token0",
						"type": "address"
					},
					{
						"name": "_token1",
						"type": "address"
					},
					{
						"name": "_dex",
						"type": "address"
					},
					{
						"name": "whichP",
						"type": "uint256"
					},
					{
						"name": "_tickerQ",
						"type": "bytes32"
					},
					{
						"name": "_tickerT",
						"type": "bytes32"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "ticker",
						"type": "bytes32"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "ticker",
						"type": "bytes32"
					}
				],
				"name": "deposit",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"userdoc": {
			"methods": {
				"deposit(uint256,bytes32)": {
					"notice": "should I call and ERC 20 method?"
				},
				"initialize(address,address,address,uint256,bytes32,bytes32)": {
					"notice": "make and send limit order?"
				},
				"withdraw(uint256,bytes32)": {
					"notice": "withdraw method"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Pool.sol": "Pool"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Exc.sol": {
			"keccak256": "0xb03600bef66a0263fdd8c22d84a8c3ae8dba0fe7c16d724d735dd3aecc0c08f8",
			"urls": [
				"bzzr://754764f64ec66a62bd174b1cd592870cbe0375d5d02736b4439a2ed1599c5508"
			]
		},
		"contracts/Heap.sol": {
			"keccak256": "0x44aabeb27f7ae52e44809dabe4ad067a801b2730f5e41368fc6b949b7fe62743",
			"urls": [
				"bzzr://bfe951ea38765281e85f9e4b8d6a8fd8ba504ca81f8458937a749fb9792e3cd4"
			]
		},
		"contracts/IExc.sol": {
			"keccak256": "0xe9b10cb9900cbc02048dc2c5ac301a07c5763310fe50a1e990fc37657284cdf3",
			"urls": [
				"bzzr://d81872d6eda7eee68651de9e81a1b628591948fae1cd4f670c015790c83031c3"
			]
		},
		"contracts/Pool.sol": {
			"keccak256": "0x562d30747f9829b3143da51a58a9e82c1f8476e935b2cffaf4c25c1833770910",
			"urls": [
				"bzzr://dc007849a5bb347d105aa55f8fe242e73640a4d986af66b6b4a43920f93c843c"
			]
		},
		"contracts/libraries/GSN/Context.sol": {
			"keccak256": "0x98d9c3f119eabc9384b14d85702d9a1249760fc32ae8cb295f1071a064c6733a",
			"urls": [
				"bzzr://beced7f16902f6de97148603c79e526e72d5244a56fb76d500ee3b857ff9bb47"
			]
		},
		"contracts/libraries/math/SafeMath.sol": {
			"keccak256": "0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75",
			"urls": [
				"bzzr://cdb2eefb0ce6e610ee1b981cdaed5906eaeff5363d4cc6f3df854c93148c3916"
			]
		},
		"contracts/libraries/token/ERC20/ERC20.sol": {
			"keccak256": "0x5394db3bea189ac8c117f957e21f2b4369e7987ba8520613a5c62e56ba751d58",
			"urls": [
				"bzzr://0d796e6f2827d5f4250e338ce5fdf732941f542fd8ea4fac2a880590eb260796"
			]
		},
		"contracts/libraries/token/ERC20/IERC20.sol": {
			"keccak256": "0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e",
			"urls": [
				"bzzr://f039f90386b495b4615922fc5eb29b8659ab0eff8fc1895624b4e5b77ceee009"
			]
		}
	},
	"version": 1
}